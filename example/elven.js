/*!
 * Portions of this code are derived from MultiversX libraries.
 * These portions are licensed under the MIT License.
 *
 * See the MultiversX repository for details: https://github.com/multiversx
 */

var ut=n=>n.match(/.{1,2}/g)?.length===32,M=n=>new TextEncoder().encode(n),A=n=>{let t=[];for(let e=0;e<n.length;e+=2)t.push(parseInt(n.slice(e,e+2),16));return Uint8Array.from(t)},N=n=>new TextDecoder().decode(n),x=n=>Array.from(n).map(t=>t.toString(16).padStart(2,"0")).join(""),W=n=>{let t=M(n);return x(t)},v=n=>{let t;function e(r){try{return btoa(atob(r))===r}catch{return!1}}if(e(n)){let r=atob(n),s=r.length;t=new Uint8Array(s);for(let i=0;i<s;i++)t[i]=r.charCodeAt(i)}else t=new TextEncoder().encode(n);return t},L=n=>{if(!n||!n.length)return;let t;if(typeof n=="string")t=new TextEncoder().encode(n);else if(n instanceof Uint8Array)t=n;else return;let e=String.fromCharCode(...t);return btoa(e)};function Ct(n){let t=[],e=/([^[\]]+)|\[(.*?)\]/g,r;for(;(r=e.exec(n))!==null;)r[1]!==void 0?t.push(r[1]):r[2]!==void 0&&(r[2]===""?t.push(""):/^\d+$/.test(r[2])?t.push(Number(r[2])):t.push(r[2]));return t}function Ot(n,t,e){let r=n;for(let s=0;s<t.length;s++){let i=t[s];if(s===t.length-1)i===""?(Array.isArray(r)||(r=[]),r.push(e)):(typeof i=="number"&&(Array.isArray(r)||(r=[])),r[i]=e);else{let o=t[s+1];i===""?(Array.isArray(r)||(r=[]),(r.length===0||typeof r[r.length-1]!="object")&&r.push(typeof o=="number"?[]:{}),r=r[r.length-1]):typeof i=="number"?(Array.isArray(r)||(r=[]),r[i]||(r[i]=typeof o=="number"?[]:{}),r=r[i]):(r[i]||(r[i]=typeof o=="number"||o===""?[]:{}),r=r[i])}}}function nt(n,t,e){if(t!=null)if(typeof t=="object")if(Array.isArray(t))t.forEach(r=>{nt([...n,""],r,e)});else for(let r in t)Object.prototype.hasOwnProperty.call(t,r)&&nt([...n,r],t[r],e);else{let r=n.map((s,i)=>i===0?encodeURIComponent(String(s)):s===""?"[]":`[${encodeURIComponent(String(s))}]`).join("");e.push(`${r}=${encodeURIComponent(t)}`)}}function it(n){let t=new URLSearchParams(n),e={};for(let[r,s]of t.entries()){let i=Ct(r);Ot(e,i,s)}return e}function gt(n){let t=[];return nt([],n,t),t.join("&")}var b=class{constructor(t){this.address=new Uint8Array([]);this.nonce=0;this.balance="0";ut(t)&&(this.address=A(t))}update(t){this.nonce=t.nonce,this.balance=t.balance}incrementNonce(){this.nonce=this.nonce+1}getNonceThenIncrement(){let t=this.nonce;return this.nonce=this.nonce+1,t}toJSON(){return{address:x(this.address),nonce:this.nonce,balance:this.balance}}bech32(){return x(this.address)}};var pt="sdk-js";var ht="hook/login",mt="hook/logout";var ft="hook/sign",wt="hook/2fa",Tt="hook/sign-message",R="walletProviderStatus",$="transactionsSigned";var C=class{constructor(t){this.nonce=BigInt(t.nonce?.valueOf()||0n),this.value=t.value??0n,this.sender=this.addressAsBech32(t.sender),this.receiver=this.addressAsBech32(t.receiver),this.senderUsername=t.senderUsername||"",this.receiverUsername=t.receiverUsername||"",this.gasPrice=BigInt(t.gasPrice?.valueOf()||1e9),this.gasLimit=BigInt(t.gasLimit.valueOf()),this.data=t.data?.valueOf()||new Uint8Array,this.chainID=t.chainID.valueOf(),this.version=Number(t.version?.valueOf()||2),this.options=Number(t.options?.valueOf()||0),this.guardian=t.guardian?this.addressAsBech32(t.guardian):"",this.signature=t.signature||new Uint8Array([]),this.guardianSignature=t.guardianSignature||new Uint8Array([]),this.relayer=t.relayer||"",this.innerTransactions=t.innerTransactions||[]}addressAsBech32(t){return t}isGuardedTransaction(){let t=this.guardian.length>0,e=this.guardianSignature.length>0;return t&&e}};var w=class extends Error{constructor(e,r){super(e);this.inner=void 0;this.inner=r}summary(){let e=[];e.push({name:this.name,message:this.message});let r=this.inner;for(;r;)e.push({name:r.name,message:r.message}),r=r.inner;return e}};var G=class extends w{constructor(){super("Async timer already running")}},H=class extends w{constructor(){super("Async timer aborted")}};var U=class extends w{constructor(){super("Expected transaction status not reached")}},O=class extends w{constructor(){super("Expected transaction events not found")}};var B=class extends w{constructor(){super("The transaction watcher requires the `isCompleted` property to be defined on the transaction object. Perhaps you've used the sdk-network-provider's `ProxyNetworkProvider.getTransaction()` and in that case you should also pass `withProcessStatus=true`.")}};var Q=class extends w{constructor(){super("Cannot sign single transaction.")}},z=class extends w{constructor(){super("Account is not connected.")}},_=class extends Error{constructor(){super("Cannot get signed transaction(s)")}},j=class extends Error{constructor(){super("Cannot get signed message")}};var E=class{constructor(t){this.timeoutHandle=null;this.rejectionFunc=null;this.name=t,this.correlationTag=0}start(t){if(this.timeoutHandle)throw new G;return this.correlationTag++,new Promise((e,r)=>{this.rejectionFunc=r;let s=()=>{this.rejectionFunc=null,this.stop(),e()};this.timeoutHandle=setTimeout(s,t)})}abort(){this.rejectionFunc&&(this.rejectionFunc(new H),this.rejectionFunc=null),this.stop()}stop(){this.isStopped()||this.timeoutHandle&&(clearTimeout(this.timeoutHandle),this.timeoutHandle=null)}isStopped(){return!this.timeoutHandle}};var st=class{constructor(t){this.fetcher=t}async getTransaction(t){return await this.fetcher.getTransaction(t)}},F=class n{static{this.DefaultPollingInterval=6e3}static{this.DefaultTimeout=n.DefaultPollingInterval*15}static{this.DefaultPatience=0}static{this.NoopOnStatusReceived=()=>{}}constructor(t,e={}){this.fetcher=new st(t),this.pollingIntervalMilliseconds=e.pollingIntervalMilliseconds||n.DefaultPollingInterval,this.timeoutMilliseconds=e.timeoutMilliseconds||n.DefaultTimeout,this.patienceMilliseconds=e.patienceMilliseconds||n.DefaultPatience}async awaitPending(t){let e=i=>i.status.isPending(),r=async()=>{let i=this.transactionOrTxHashToTxHash(t);return await this.fetcher.getTransaction(i)},s=()=>new U;return this.awaitConditionally(e,r,s)}async awaitCompleted(t){let e=i=>{if(i.isCompleted===void 0)throw new B;return i.isCompleted},r=async()=>{let i=this.transactionOrTxHashToTxHash(t);return await this.fetcher.getTransaction(i)},s=()=>new U;return this.awaitConditionally(e,r,s)}async awaitAllEvents(t,e){let r=o=>{let l=this.getAllTransactionEvents(o).map(u=>u.identifier);return e.every(u=>l.includes(u))},s=async()=>{let o=this.transactionOrTxHashToTxHash(t);return await this.fetcher.getTransaction(o)},i=()=>new O;return this.awaitConditionally(r,s,i)}async awaitAnyEvent(t,e){let r=o=>{let l=this.getAllTransactionEvents(o).map(u=>u.identifier);return e.find(u=>l.includes(u))!=null},s=async()=>{let o=this.transactionOrTxHashToTxHash(t);return await this.fetcher.getTransaction(o)},i=()=>new O;return this.awaitConditionally(r,s,i)}async awaitOnCondition(t,e){let r=async()=>{let i=this.transactionOrTxHashToTxHash(t);return await this.fetcher.getTransaction(i)},s=()=>new U;return this.awaitConditionally(e,r,s)}transactionOrTxHashToTxHash(t){let e=typeof t=="string"?t:t.getHash().hex();if(e.length!==64)throw new w(`Invalid transaction hash length. The length of a hex encoded hash should be ${64}.`);return e}async awaitConditionally(t,e,r){let s=new E("watcher:periodic"),i=new E("watcher:patience"),o=new E("watcher:timeout"),l=!1,d,u=!1;for(o.start(this.timeoutMilliseconds).finally(()=>{o.stop(),l=!0});!l&&(await s.start(this.pollingIntervalMilliseconds),d=await e(),u=t(d),!(u||l)););if(u&&await i.start(this.patienceMilliseconds),o.isStopped()||o.stop(),!d||!u)throw r();return d}getAllTransactionEvents(t){let e=[...t.logs.events];for(let r of t.contractResults.items)e.push(...r.logs.events);return e}};var P=class{constructor(t){this.data=t.data,this.signature=t.signature,this.address=t.address,this.version=t.version||1,this.signer=t.signer||pt}};var T=class{static transactionToPlainObject(t){return{nonce:Number(t.nonce),value:t.value.toString(),receiver:t.receiver,sender:t.sender,senderUsername:L(t.senderUsername),receiverUsername:L(t.receiverUsername),gasPrice:Number(t.gasPrice),gasLimit:Number(t.gasLimit),data:L(t.data),chainID:t.chainID,version:t.version,options:t.options==0?void 0:t.options,guardian:t.guardian?t.guardian:void 0,signature:x(t.signature),guardianSignature:x(t.guardianSignature),relayer:t.relayer?t.relayer:void 0,innerTransactions:t.innerTransactions.length?t.innerTransactions.map(e=>this.transactionToPlainObject(e)):void 0}}static plainObjectToTransaction(t){return new C({nonce:BigInt(t.nonce),value:BigInt(t.value||""),receiver:t.receiver,receiverUsername:v(t.receiverUsername||"").toString(),sender:t.sender,senderUsername:v(t.senderUsername||"").toString(),guardian:t.guardian,gasPrice:BigInt(t.gasPrice),gasLimit:BigInt(t.gasLimit),data:v(t.data||""),chainID:String(t.chainID),version:Number(t.version),options:Number(t.options),signature:A(t.signature||""),guardianSignature:A(t.guardianSignature||""),relayer:t.relayer,innerTransactions:t.innerTransactions?t.innerTransactions.map(r=>this.plainObjectToTransaction(r)):void 0})}};var I=class n{constructor(){this.account={address:""};this.initialized=!1;if(n._instance)throw new Error("Error: Instantiation failed: Use ExtensionProvider.getInstance() instead of new.");n._instance=this}static{this._instance=new n}static getInstance(){return n._instance}setAddress(t){return this.account.address=t,n._instance}async init(){return window&&window.elrondWallet&&(this.initialized=!0),this.initialized}async login(t={}){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");let{token:e}=t,r=e||"";return await this.startBgrMsgChannel("connect",r),this.account}async logout(){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");try{await this.startBgrMsgChannel("logout",this.account.address),this.disconnect()}catch(t){console.warn("Extension origin url is already cleared!",t)}return!0}disconnect(){this.account={address:""}}async getAddress(){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");return this.account?this.account.address:""}isInitialized(){return this.initialized}isConnected(){return!!this.account.address}getAccount(){return this.account}setAccount(t){this.account=t}async signTransaction(t){this.ensureConnected();let e=await this.signTransactions([t]);if(e.length!=1)throw new Q;return e[0]}ensureConnected(){if(!this.account.address)throw new z}async signTransactions(t){this.ensureConnected();let e=await this.startBgrMsgChannel("signTransactions",{from:this.account.address,transactions:t.map(r=>T.transactionToPlainObject(r))});try{return e.map(s=>T.plainObjectToTransaction(s))}catch(r){throw new Error(`Transaction canceled: ${r.message}.`)}}async signMessage(t){this.ensureConnected();let e={account:this.account.address,message:N(t.data)},s=(await this.startBgrMsgChannel("signMessage",e)).signature,i=A(s);return new P({data:t.data,address:t.address??this.account.address,signer:"extension",version:t.version,signature:i})}cancelAction(){return this.startBgrMsgChannel("cancelAction",{})}startBgrMsgChannel(t,e){return new Promise(r=>{window.postMessage({target:"erdw-inpage",type:t,data:e},window.origin);let s=i=>{i.isTrusted&&i.data.target==="erdw-contentScript"&&(i.data.type==="connectResponse"?(i.data.data&&i.data.data.address&&(this.account=i.data.data),window.removeEventListener("message",s),r(i.data.data)):(window.removeEventListener("message",s),r(i.data.data)))};window.addEventListener("message",s,!1)})}};var V="elvenjs_state",yt="https://devnet-api.multiversx.com";var S="/dapp/init",q="devnet";var xt=["wss://relay.walletconnect.com"],y={devnet:{id:"devnet",shortId:"D",name:"Devnet",egldLabel:"xEGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://devnet-wallet.multiversx.com",xAliasAddress:"https://devnet.xalias.com",apiAddress:"https://devnet-api.multiversx.com",explorerAddress:"https://devnet-explorer.multiversx.com",apiTimeout:1e4},testnet:{id:"testnet",shortId:"T",name:"Testnet",egldLabel:"xEGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://testnet-wallet.multiversx.com",xAliasAddress:"https://testnet.xalias.com",apiAddress:"https://testnet-api.multiversx.com",explorerAddress:"https://testnet-explorer.multiversx.com",apiTimeout:1e4},mainnet:{id:"mainnet",shortId:"1",name:"Mainnet",egldLabel:"EGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://wallet.multiversx.com",xAliasAddress:"https://xalias.com",apiAddress:"https://api.multiversx.com",explorerAddress:"https://explorer.multiversx.com",apiTimeout:1e4}};var c={get(n){let t=localStorage.getItem(V);if(!t)return{};let e=JSON.parse(t);return n?e[n]:e},set(n,t){let e=this.get();e[n]=t,localStorage.setItem(V,JSON.stringify(e))},clear(){localStorage.removeItem(V)}};var K=async()=>{let n=I.getInstance();try{let t=await n.init(),e=c.get();if(e?.address&&n.setAddress(e.address),!t){console.warn("Something went wrong when trying to initialize the ExtensionProvider..");return}return n}catch{console.warn("Can't initialize the Dapp Provider!")}};var ot=class{constructor(t){this.nonce=0;this.value="";this.receiver="";this.sender="";this.gasPrice=0;this.gasLimit=0;this.data="";this.chainID="";this.version=0;this.signature="";Object.assign(this,t)}},m=class n{constructor(t){this.walletUrl=t}async login(t){let e=this.buildWalletUrl({endpoint:ht,callbackUrl:t?.callbackUrl,params:{token:t?.token}});return await this.redirect(e,t?.redirectDelayMilliseconds),e}async redirect(t,e){e?await this.redirectLater(t,e):this.redirectImmediately(t)}redirectImmediately(t){window.location.href=t}async redirectLater(t,e){await new Promise(r=>{setTimeout(()=>{window.location.href=t,r(!0)},e)})}async logout(t){let e=this.buildWalletUrl({endpoint:mt,callbackUrl:t?.callbackUrl});return await this.redirect(e,t?.redirectDelayMilliseconds),!0}async signMessage(t,e){let r=this.buildWalletUrl({endpoint:Tt,callbackUrl:e?.callbackUrl,params:{message:N(t.data)}});return await this.redirect(r),r}getMessageSignatureFromWalletUrl(){let t=window.location.search.slice(1);console.info("getMessageSignatureFromWalletUrl(), url:",t);let e=it(t);if((e.status?.toString()||"")!=="signed")throw new j;return e.signature?.toString()||""}async guardTransactions(t,e){this.redirectTransactionsToEndpoint(wt,t,e)}async signTransactions(t,e){this.redirectTransactionsToEndpoint(ft,t,e)}async signTransaction(t,e){await this.signTransactions([t],e)}getTransactionsFromWalletUrl(t=window.location.search){let e=it(t.slice(1));return n.isTxSignReturnSuccess(e)?this.getTxSignReturnValue(e):[]}static isTxSignReturnSuccess(t){return Object.prototype.hasOwnProperty.call(t,R)&&t[R]===$}getTxSignReturnValue(t){console.info("getTxSignReturnValue(), urlParams:",t);let e=["nonce","value","receiver","sender","gasPrice","gasLimit","chainID","version","signature"];for(let i of e)if(!t[i]||!Array.isArray(t[i]))throw new _;let r=t.nonce.length;for(let i of e)if(t[i].length!==r)throw new _;let s=[];for(let i=0;i<r;i++){let o=new ot({nonce:parseInt(t.nonce[i]),value:t.value[i],receiver:t.receiver[i],sender:t.sender[i],gasPrice:parseInt(t.gasPrice[i]),gasLimit:parseInt(t.gasLimit[i]),data:t.data&&t.data[i]?t.data[i]:"",chainID:t.chainID[i],version:parseInt(t.version[i]),...t.guardian&&t.guardian[i]?{guardian:t.guardian[i]}:{},...t.guardianSignature&&t.guardianSignature[i]?{guardianSignature:t.guardianSignature[i]}:{},...t.options&&t.options[i]?{options:parseInt(t.options[i])}:{},...t.senderUsername&&t.senderUsername[i]?{senderUsername:t.senderUsername[i]}:{},...t.receiverUsername&&t.receiverUsername[i]?{receiverUsername:t.receiverUsername[i]}:{},signature:t.signature[i]});s.push(o)}return s}static prepareWalletTransaction(t){let e=T.transactionToPlainObject(t);return e.data?e.data=N(v(e.data)):e.data="",e}buildWalletUrl(t){let e=t?.callbackUrl||window.location.href,r=gt(t.params||{}),s=r?`${r}&callbackUrl=${e}`:`callbackUrl=${e}`,i=`${this.baseWalletUrl()}/${t.endpoint}?${s}`;return console.info(`Redirecting to Wallet URL: ${decodeURI(i)}`),i}baseWalletUrl(){let t=this.walletUrl.split("/"),e=t[0],r=t[2];return e+"//"+r}redirectTransactionsToEndpoint(t,e,r){let s={};e.map(o=>{let l=n.prepareWalletTransaction(o);for(let d in l)Object.prototype.hasOwnProperty.call(l,d)&&!Object.prototype.hasOwnProperty.call(s,d)&&(s[d]=[]),s[d].push(l[d])});let i=this.buildWalletUrl({endpoint:t,callbackUrl:r?.callbackUrl,params:s});window.location.href=i}};var at=class{constructor(){this.origin=typeof window<"u"&&typeof window.location<"u"?window.location.hostname:"";this.apiUrl="https://api.multiversx.com";this.expirySeconds=60*60*24}},k=class{constructor(t){this.config=Object.assign(new at,t)}getToken(t,e,r){let s=this.encodeValue(t),i=this.encodeValue(e);return`${s}.${i}.${r}`}async initialize(t={}){let e=await this.getCurrentBlockHash(),r=this.encodeValue(JSON.stringify(t));return`${this.encodeValue(this.config.origin)}.${e}.${this.config.expirySeconds}.${r}`}async getCurrentBlockHash(){return this.config.gatewayUrl?await this.getCurrentBlockHashWithGateway():await this.getCurrentBlockHashWithApi()}async getCurrentBlockHashWithGateway(){let t=await this.getCurrentRound(),e=`${this.config.gatewayUrl}/blocks/by-round/${t}`;return(await this.get(e)).data.data.blocks.filter(o=>o.shard===this.config.blockHashShard)[0].hash}async getCurrentRound(){if(!this.config.gatewayUrl)throw new Error("Gateway URL not set");if(!this.config.blockHashShard)throw new Error("Blockhash shard not set");let t=`${this.config.gatewayUrl}/network/status/${this.config.blockHashShard}`;return(await this.get(t)).data.data.status.erd_current_round}async getCurrentBlockHashWithApi(){let t=`${this.config.apiUrl}/blocks/latest?ttl=${this.config.expirySeconds}&fields=hash`,e=await this.get(t);return e.hash!==void 0?e.hash:this.getCurrentBlockHashWithApiFallback()}async getCurrentBlockHashWithApiFallback(){let t=`${this.config.apiUrl}/blocks?size=1&fields=hash`;return this.config.blockHashShard!==void 0&&(t+=`&shard=${this.config.blockHashShard}`),(await this.get(t)).hash}encodeValue(t){return this.escape(W(t))}escape(t){return t.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async get(t){try{let e=await fetch(t,{method:"GET",headers:this.config.extraRequestHeaders});if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return await e.json()}catch(e){throw console.error("There was a problem with the fetch operation:",e),e}}};var h=n=>{if(typeof window<"u"){let t=new URL(window.location.href);return new URLSearchParams(t.search).get(n)}};var bt=async(n,t)=>{let e=h("signature"),r=h("address"),s=c.get("address"),i=c.get("loginToken");if(e&&c.set("signature",e),r||s){r&&(c.set("address",r),window.history.replaceState(null,"",window.location.pathname));let o=new m(`${n}${S}`);if(e&&t&&r){let d=new k({apiUrl:t,origin:window.location.origin}).getToken(r,i,e);c.set("accessToken",d)}return o}};var J=class n{constructor(t){this.status=(t||"").toLowerCase()}static createUnknown(){return new n("unknown")}isPending(){return this.status=="received"||this.status=="pending"}isExecuted(){return this.isSuccessful()||this.isFailed()||this.isInvalid()}isSuccessful(){return this.status=="executed"||this.status=="success"||this.status=="successful"}isFailed(){return this.status=="fail"||this.status=="failed"||this.status=="unsuccessful"||this.isInvalid()}isInvalid(){return this.status=="invalid"}toString(){return this.status}valueOf(){return this.status}equals(t){return t?this.status==t.status:!1}};var X=class{constructor({apiUrl:t,chainType:e,apiTimeout:r}){this.chainType=e||q,this.apiUrl=t||y[this.chainType]?.apiAddress,this.apiTimeout=r||y[this.chainType]?.apiTimeout}async apiGet(t,e){if(typeof fetch<"u"){let r=new AbortController,s=setTimeout(()=>r.abort(),this.apiTimeout),i={method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"},signal:r.signal};try{let o=await fetch(this.apiUrl+"/"+t,Object.assign(i,e||{})),l=await o.json();if(!o.ok){let d=l?.error||o.status;return clearTimeout(s),Promise.reject(d)}return clearTimeout(s),l}catch(o){this.handleApiError(o,t)}}}async apiPost(t,e,r){if(typeof fetch<"u"){let s=new AbortController,i=setTimeout(()=>s.abort(),this.apiTimeout),o={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e||{}),signal:s.signal};try{let l=await fetch(this.apiUrl+"/"+t,Object.assign(o,r||{})),d=await l.json();if(!l.ok){let u=d?.error||l.status;return clearTimeout(i),Promise.reject(u)}return clearTimeout(i),d}catch(l){this.handleApiError(l,t)}}}handleApiError(t,e){if(!t.response)throw new Error(`Request error on url [${e}]: [${t.toString()}]`);let r=t.response.data,s=r.error||r.message||JSON.stringify(r);throw new Error(s)}async sendTransaction(t){let e=T.transactionToPlainObject(t);return(await this.apiPost("transactions",e)).txHash}async getAccount(t){let e=await this.apiGet(`accounts/${t}`);return{address:e?.address||"",nonce:Number(e?.nonce||0),balance:e?.balance,code:e?.code||"",userName:e?.username||""}}async getGuardianData(t){let e=await this.apiGet(`address/${t}/guardian-data`);return{guarded:e?.data?.guardianData?.guarded||!1,activeGuardian:e?.data?.guardianData?.activeGuardian,pendingGuardian:e?.data?.guardianData?.pendingGuardian}}async getTransaction(t){let e=await this.apiGet(`transactions/${t}`),r=new J(e.status);return{hash:t,type:e.type||"",nonce:e.nonce||0,round:e.round,epoch:e.epoch||0,value:(e.value||0).toString(),sender:e.sender,receiver:e.receiver,gasPrice:e.gasPrice||0,gasLimit:e.gasLimit||0,data:v(e.data||""),status:r,timestamp:e.timestamp||0,blockNonce:e.blockNonce||0,hyperblockNonce:e.hyperblockNonce||0,hyperblockHash:e.hyperblockHash||"",receipt:e.receipt,logs:e.logs,contractResults:e.results||[],isCompleted:!r.isPending()}}async queryContract({address:t,func:e,args:r,value:s,caller:i}){try{let o={scAddress:t,caller:i,funcName:e,value:s,args:()=>r?.map(d=>W(d))},l=await this.apiPost("query",o);return{returnData:l.returnData,returnCode:l.returnCode,returnMessage:l.returnMessage}}catch(o){this.handleApiError(o,"query")}}};var vt=(g=>(g.onLoginStart="onLoginStart",g.onLoginSuccess="onLoginSuccess",g.onLoginFailure="onLoginFailure",g.onLogoutStart="onLogoutStart",g.onLogoutSuccess="onLogoutSuccess",g.onLogoutFailure="onLogoutFailure",g.onQrPending="onQrPending",g.onQrLoaded="onQrLoaded",g.onTxStart="onTxStart",g.onTxSent="onTxSent",g.onTxFinalized="onTxFinalized",g.onTxFailure="onTxFailure",g.onSignMsgStart="onSignMsgStart",g.onSignMsgFinalized="onSignMsgFinalized",g.onSignMsgFailure="onSignMsgFailure",g.onQueryStart="onQueryStart",g.onQueryFinalized="onQueryFinalized",g.onQueryFailure="onQueryFailure",g))(vt||{}),ct=(o=>(o.ledger="ledger",o.mobile="mobile",o.webWallet="web-wallet",o.browserExtension="browser-extension",o.xAlias="x-alias",o.xPortalHub="x-portal-hub",o))(ct||{}),Mt=(e=>(e.mvx_cancelAction="mvx_cancelAction",e.mvx_signNativeAuthToken="mvx_signNativeAuthToken",e))(Mt||{}),Wt=(t=>(t.hasWebWalletGuardianSign="hasWebWalletGuardianSign",t))(Wt||{});var a=class{static set(t,e){if(!t)return;let r={...this.events,[t]:e};this.events=r}static get(t){if(!(!t||!this.events))return this.events[t]}static run(t,...e){!t||!this.events||this.events[t]?.(...e)}static clear(){this.events=void 0}};var p=n=>typeof n=="string"?n.toUpperCase():n instanceof Error?n.message:JSON.stringify(n);var St=async n=>{if(!n.dappProvider)throw new Error("Logout failed: There is no active session!");a.run("onLogoutStart");try{let t=await n.dappProvider.logout();return t&&(c.clear(),a.run("onLogoutSuccess")),t}catch(t){let e=p(t);console.warn(`Something went wrong trying to logout the user: ${e}`),a.run("onLogoutFailure",e)}};var Y=()=>new Date().setHours(new Date().getHours()+24),Z=n=>Date.now()>n;var D=async n=>{let t=c.get("address"),e=c.get("expires");if(!(e&&Z(e))&&t&&n.networkProvider){let s=new b(t);try{let i=await n.networkProvider.getAccount(t),o=await n.networkProvider.getGuardianData(t);c.set("address",t),c.set("activeGuardian",o.guarded&&o.activeGuardian?.address?o.activeGuardian.address:""),c.set("nonce",i.nonce.valueOf()),c.set("balance",i.balance.toString()),s.update(i)}catch(i){let o=p(i);console.warn(`Something went wrong trying to synchronize the user account: ${o}`)}}};var At=async(n,t,e,r="/")=>{let s=await K(),o={callbackUrl:encodeURIComponent(`${window.location.origin}${r}`),token:t};try{if(s&&!await s.login(o))throw new Error("There were problems while logging in!")}catch(u){let f=p(u);throw new Error(f)}if(!s)throw new Error("There were problems with auth provider initialization!");let l=s.getAccount();c.set("loginToken",t);let d=l?.signature;if(d&&c.set("signature",d),n.networkProvider&&d)try{let u=await s.getAddress();if(!u)throw new Error("Canceled!");c.set("address",u),c.set("loginMethod","browser-extension"),c.set("expires",Y()),await D(n);let f=e.getToken(u,t,d);return c.set("accessToken",f),a.run("onLoginSuccess"),s}catch(u){throw new Error(`Something went wrong trying to synchronize the user account: ${u?.message}`)}};var Pt=async(n,t,e,r)=>{let s=new m(`${n}${S}`),o={callbackUrl:typeof window<"u"?encodeURIComponent(`${window.location.origin}${r||"/"}`):"/",token:t};try{return c.set("loginMethod",y[e].xAliasAddress===n?"x-alias":"web-wallet"),await s.login(o),c.set("expires",Y()),c.set("loginToken",t),s}catch(l){let d=p(l);console.warn(`Something went wrong trying to login the user: ${d}`),c.set("loginMethod",""),a.run("onLoginFailure",d)}};var tt=async(n,t,e)=>{a.run("onTxSent",n);let s=await new F(e).awaitCompleted(t),i=s.sender,o=new b(i),l=await e.getAccount(i);o.update(l),c.set("address",o.bech32()),c.set("balance",o.balance),a.run("onTxFinalized",s)};var et=n=>{let t=n.sender,e=new b(t),r=n.nonce.valueOf();e.incrementNonce(),c.set("nonce",(r+1n).toString())};var It=async(n,t,e,r)=>{if(h(R)===$&&n&&t){let i=c.get("activeGuardian"),o=c.get("loginMethod"),l=h("hasWebWalletGuardianSign"),d;if("getTransactionsFromWalletUrl"in n){if(d=n.getTransactionsFromWalletUrl()?.[0],!d)return;o==="web-wallet"&&(d.data=L(d.data))}else i&&o!=="web-wallet"&&o!=="x-alias"&&l&&(d=new m(`${e}${S}`).getTransactionsFromWalletUrl()?.[0]);if(d){let u=T.plainObjectToTransaction(d);u.nonce=BigInt(r),et(u);try{a.run("onTxStart",u);let f=await t.sendTransaction(u);await tt(u,f,t)}catch(f){let dt=`Getting transaction information failed! ${p(f)}`;throw a.run("onTxFailure",u,dt),new Error(dt)}finally{window.history.replaceState(null,"",window.location.pathname)}}window.history.replaceState(null,"",window.location.pathname)}};var Lt=n=>{let t=c.get("activeGuardian");return t&&(n.version=2,n.options=2,n.guardian=t),n},Ut=async(n,t)=>{let e=new m(`${t}${S}`),r=window?.location.href,s=new URL(r);s.searchParams.set("hasWebWalletGuardianSign","true"),await e.guardTransactions([n],{callbackUrl:encodeURIComponent(s.toString())})},Et=n=>{let t=c.get("activeGuardian");return!(!c.get("address")||!t||n.isGuardedTransaction())};var kt=()=>{let n=!h("walletProviderStatus"),t=h("status")==="signed",e=h("message"),r=h("signature");n&&t&&e&&r&&(a.run("onSignMsgFinalized",e,r),window.history.replaceState(null,"",window.location.pathname))};var Nt=n=>{n.onLoginStart&&a.set("onLoginStart",n.onLoginStart),n.onLoginSuccess&&a.set("onLoginSuccess",n.onLoginSuccess),n.onLoginFailure&&a.set("onLoginFailure",n.onLoginFailure),n.onLogoutStart&&a.set("onLogoutStart",n.onLogoutStart),n.onLogoutSuccess&&a.set("onLogoutSuccess",n.onLogoutSuccess),n.onLogoutFailure&&a.set("onLogoutFailure",n.onLogoutFailure),n.onQrPending&&a.set("onQrPending",n.onQrPending),n.onQrLoaded&&a.set("onQrLoaded",n.onQrLoaded),n.onTxStart&&a.set("onTxStart",n.onTxStart),n.onTxSent&&a.set("onTxSent",n.onTxSent),n.onTxFinalized&&a.set("onTxFinalized",n.onTxFinalized),n.onTxFailure&&a.set("onTxFailure",n.onTxFailure),n.onSignMsgStart&&a.set("onSignMsgStart",n.onSignMsgStart),n.onSignMsgFinalized&&a.set("onSignMsgFinalized",n.onSignMsgFinalized),n.onSignMsgFailure&&a.set("onSignMsgFailure",n.onSignMsgFailure),n.onQueryStart&&a.set("onQueryStart",n.onQueryStart),n.onQueryFinalized&&a.set("onQueryFinalized",n.onQueryFinalized),n.onQueryFailure&&a.set("onQueryFailure",n.onQueryFailure)};var rt=async n=>{a.run("onLoginStart");try{await n(()=>{a.run("onLoginSuccess")})}catch(t){let e=p(t);console.warn(`Something went wrong trying to login the user: ${e}`),a.run("onLoginFailure",e)}};var lt=class{static async init(t){let e=c.get();if(e.expires&&Z(e.expires)){c.clear(),this.dappProvider=void 0;return}this.initOptions={chainType:q,apiUrl:yt,apiTimeout:1e4,walletConnectV2ProjectId:"",walletConnectV2RelayAddresses:xt,...t},this.networkProvider=new X(this.initOptions),Nt(this.initOptions),h("accessToken")&&await rt(async i=>{await D(this),i()}),(e?.address||(e.loginMethod==="web-wallet"||e.loginMethod==="x-alias")&&h("address"))&&e?.loginMethod&&(await rt(async i=>{e.loginMethod==="browser-extension"&&(this.dappProvider=await K()),e.loginMethod==="web-wallet"&&this.initOptions?.chainType&&(this.dappProvider=await bt(y[this.initOptions.chainType].walletAddress,this.initOptions.apiUrl)),await D(this),i()}),this.initOptions?.chainType&&(await It(this.dappProvider,this.networkProvider,y[this.initOptions.chainType][e.loginMethod==="x-alias"?"xAliasAddress":"walletAddress"],e.nonce),kt()))}static async login(t,e){if(!Object.values(ct).includes(t)){let s="Wrong login method!";throw a.run("onLoginFailure",s),new Error(s)}if(!this.networkProvider){let s="Login failed: Use ElvenJs.init() first!";throw a.run("onLoginFailure",s),new Error(s)}await rt(async()=>{let s=new k({apiUrl:this.initOptions?.apiUrl,origin:window.location.origin}),i=await s.initialize();if(t==="browser-extension"){let o=await At(this,i,s,e?.callbackRoute);this.dappProvider=o}if(t==="web-wallet"&&this.initOptions?.chainType){let o=await Pt(y[this.initOptions.chainType].walletAddress,i,this.initOptions?.chainType,e?.callbackRoute);this.dappProvider=o}})}static async logout(){try{let t=await St(this);return this.dappProvider=void 0,t}catch(t){let e=p(t);console.warn("Something went wrong when logging out: ",e)}}static async signAndSendTransaction(t){if(!this.dappProvider){let r="Transaction signing failed: There is no active session!";throw a.run("onTxFailure",t,r),new Error(r)}if(!this.networkProvider){let r="Transaction signing failed: There is no active network provider!";throw a.run("onTxFailure",t,r),new Error(r)}let e=Lt(t);try{a.run("onTxStart",t);let r=c.get();if(t.nonce=r.nonce,this.dappProvider instanceof I&&(e=await this.dappProvider.signTransaction(t)),this.dappProvider instanceof m&&await this.dappProvider.signTransaction(t),r.loginMethod!=="web-wallet"&&r.loginMethod!=="x-alias"){let s=Et(e);if(s||et(e),s&&this.initOptions?.chainType){await Ut(e,y[this.initOptions.chainType].walletAddress);return}let i=await this.networkProvider.sendTransaction(e);await tt(e,i,this.networkProvider)}}catch(r){let s=p(r);throw a.run("onTxFailure",e,`Getting transaction information failed! ${s}`),new Error(`Getting transaction information failed! ${s}`)}return e}static async signMessage(t,e){if(!this.dappProvider){let s="Message signing failed: There is no active session!";throw a.run("onSignMsgFailure",t,s),new Error(s)}if(!this.networkProvider){let s="Message signing failed: There is no active network provider!";throw a.run("onSignMsgFailure",t,s),new Error(s)}let r="";try{if(a.run("onSignMsgStart",t),this.dappProvider instanceof I){let i=await this.dappProvider.signMessage(new P({data:M(t)}));i?.signature&&(r=x(i.signature))}if(this.dappProvider instanceof m){let i=l=>encodeURIComponent(l).replace(/[!'()*]/g,d=>`%${d.charCodeAt(0).toString(16).toUpperCase()}`),o=e?.callbackUrl||window.location.origin;await this.dappProvider.signMessage(new P({data:M(t)}),{callbackUrl:encodeURIComponent(`${o}${o.includes("?")?"&":"?"}message=${i(t)}`)})}let s=c.get();return s.loginMethod!=="web-wallet"&&s.loginMethod!=="x-alias"&&a.run("onSignMsgFinalized",t,r),{message:t,messageSignature:r}}catch(s){let i=p(s);throw a.run("onSignMsgFailure",t,i),new Error(`Message signing failed! ${i}`)}}static async queryContract({address:t,func:e,args:r=[],value:s=0,caller:i}){if(!this.networkProvider)throw new Error("Query failed: There is no active network provider!");if(!t||!e)throw new Error("Query failed: The Query arguments are not valid! Address and func required");let o={address:t,func:e,args:r,value:s,caller:i};try{a.run("onQueryStart",o);let l=await this.networkProvider.queryContract(o);return a.run("onQueryFinalized",l),l}catch(l){let d=p(l);throw a.run("onQueryFinalized",o,d),new Error(`Smart contract query failed! ${d}`)}}static{this.storage=c}static{this.destroy=()=>{this.networkProvider=void 0,this.dappProvider=void 0,this.initOptions=void 0,a.clear()}}};var $t=({amount:n,decimals:t})=>{if(t<0)throw new Error("Decimal places shouldn't be negative number!");let e=n.toString().replace(/,/g,""),[r,s=""]=e.split("."),i=r+s.padEnd(t,"0");return i=i.substring(0,r.length+t),BigInt(i)},Rt=({amount:n,decimals:t,rounding:e=t})=>{if(t<0)throw new Error("Decimal places shouldn't be negative number!");let r=BigInt(n)<0n,s=BigInt(n).toString();r&&(s=s.slice(1)),s=s.padStart(t+1,"0");let i=s.slice(0,-t),o=s.slice(-t);if(e<t){let d=parseInt(o.charAt(e),10);if(o=o.slice(0,e),d>=5){let u=BigInt("1"+"0".repeat(t-e)),f=BigInt(n)+u;return r&&(f=-f),Rt({amount:f,decimals:t,rounding:e})}}let l=`${i}.${o.padEnd(e,"0")}`;return l=l.replace(/\.?0+$/,""),r&&(l=`-${l}`),l};export{b as Account,Mt as DappCoreWCV2CustomMethodsEnum,lt as ElvenJS,vt as EventStoreEvents,ct as LoginMethodsEnum,C as Transaction,F as TransactionWatcher,Wt as WebWalletUrlParamsEnum,Rt as formatAmount,$t as parseAmount};
