/*!
 * Portions of this code are derived from MultiversX libraries.
 * These portions are licensed under the MIT License.
 *
 * See the MultiversX repository for details: https://github.com/multiversx
 * See the attached MIT licence for elven.js: https://github.com/elven-js/elven.js/blob/main/LICENSE
 */

var k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Se=new Uint8Array(256);for(let n=0;n<k.length;n++)Se[k.charCodeAt(n)]=n;var Ze=new TextEncoder,et=new TextDecoder,Pe=n=>/^[0-9a-fA-F]{64}$/.test(n),U=n=>Ze.encode(n),S=n=>et.decode(n),b=n=>{if(!/^[0-9a-fA-F]+$/.test(n)||n.length%2!==0)throw new Error("Invalid hex string");let e=new Uint8Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=parseInt(n.substr(t*2,2),16);return e},v=n=>Array.from(n).map(e=>e.toString(16).padStart(2,"0")).join(""),z=n=>v(U(n)),E=n=>{n=n.replace(/[^A-Za-z0-9+/=]/g,"");let e=0;n.endsWith("==")?e=2:n.endsWith("=")&&(e=1);let t=Math.floor(n.length*6/8-e),r=new Uint8Array(t),s=0,i=0,o=0;for(let a=0;a<n.length;a++){let l=n.charAt(a);if(l==="=")break;s=s<<6|Se[l.charCodeAt(0)],i+=6,i>=8&&(i-=8,r[o++]=s>>i&255)}return r},tt=n=>{let e="",t=n.length;for(let r=0;r<t;r+=3){let s=n[r],i=r+1<t?n[r+1]:0,o=r+2<t?n[r+2]:0,a=s<<16|i<<8|o,l=a>>18&63,u=a>>12&63,h=a>>6&63,be=a&63;e+=k.charAt(l),e+=k.charAt(u),e+=r+1<t?k.charAt(h):"=",e+=r+2<t?k.charAt(be):"="}return e},F=n=>S(E(n)),P=n=>{let e=typeof n=="string"?U(n):n;return tt(e)};function nt(n){let e=[],t=/([^[\]]+)|\[(.*?)\]/g,r;for(;(r=t.exec(n))!==null;)r[1]!==void 0?e.push(r[1]):r[2]!==void 0&&(r[2]===""?e.push(""):/^\d+$/.test(r[2])?e.push(Number(r[2])):e.push(r[2]));return e}function rt(n,e,t){let r=n;for(let s=0;s<e.length;s++){let i=e[s];if(s===e.length-1)i===""?(Array.isArray(r)||(r=[]),r.push(t)):(typeof i=="number"&&(Array.isArray(r)||(r=[])),r[i]=t);else{let o=e[s+1];i===""?(Array.isArray(r)||(r=[]),(r.length===0||typeof r[r.length-1]!="object")&&r.push(typeof o=="number"?[]:{}),r=r[r.length-1]):typeof i=="number"?(Array.isArray(r)||(r=[]),r[i]||(r[i]=typeof o=="number"?[]:{}),r=r[i]):(r[i]||(r[i]=typeof o=="number"||o===""?[]:{}),r=r[i])}}}function ue(n,e,t){if(e!=null)if(typeof e=="object")if(Array.isArray(e))e.forEach(r=>{ue([...n,""],r,t)});else for(let r in e)Object.prototype.hasOwnProperty.call(e,r)&&ue([...n,r],e[r],t);else{let r=n.map((s,i)=>i===0?encodeURIComponent(String(s)):s===""?"[]":`[${encodeURIComponent(String(s))}]`).join("");t.push(`${r}=${encodeURIComponent(e)}`)}}function ge(n){let e=new URLSearchParams(n),t={};for(let[r,s]of e.entries()){let i=nt(r);rt(t,i,s)}return t}function Ie(n){let e=[];return ue([],n,e),e.join("&")}var it=()=>typeof window<"u"&&typeof window.location<"u",W=()=>{if(it()){let n=window.location.ancestorOrigins;return n?.[n.length-1]??"*"}return"*"},pe=()=>{let n=window;return!!(n?.ReactNativeWebView||n?.webkit)};var A=class{constructor(e){this.address=new Uint8Array([]);this.nonce=0;this.balance="0";Pe(e)&&(this.address=b(e))}update(e){this.nonce=e.nonce,this.balance=e.balance}incrementNonce(){this.nonce=this.nonce+1}getNonceThenIncrement(){let e=this.nonce;return this.nonce=this.nonce+1,e}toJSON(){return{address:v(this.address),nonce:this.nonce,balance:this.balance}}bech32(){return v(this.address)}};var Re=1e9,Ee=0,Q=2,Le=2,he=64,ke=1;var Ue="sdk-js";var Ne="hook/login",Oe="hook/logout";var Ce="hook/sign",Me="hook/2fa",Fe="hook/sign-message",D="walletProviderStatus",j="transactionsSigned",We={SIGN_TRANSACTIONS_REQUEST:"SIGN_TRANSACTIONS_RESPONSE",GUARD_TRANSACTIONS_REQUEST:"GUARD_TRANSACTIONS_RESPONSE",SIGN_MESSAGE_REQUEST:"SIGN_MESSAGE_RESPONSE",LOGIN_REQUEST:"LOGIN_RESPONSE",LOGOUT_REQUEST:"DISCONNECT_RESPONSE",CANCEL_ACTION_REQUEST:"CANCEL_RESPONSE",FINALIZE_HANDSHAKE_REQUEST:"NONE_RESPONSE",FINALIZE_RESET_STATE_REQUEST:"RESET_STATE_RESPONSE"};var _=class{constructor(e){this.nonce=BigInt(e.nonce?.valueOf()||0n),this.value=e.value??0n,this.sender=this.addressAsBech32(e.sender),this.receiver=this.addressAsBech32(e.receiver),this.senderUsername=e.senderUsername||"",this.receiverUsername=e.receiverUsername||"",this.gasPrice=BigInt(e.gasPrice?.valueOf()||Re),this.gasLimit=BigInt(e.gasLimit.valueOf()),this.data=e.data?.valueOf()||new Uint8Array,this.chainID=e.chainID.valueOf(),this.version=Number(e.version?.valueOf()||Q),this.options=Number(e.options?.valueOf()||Ee),this.guardian=e.guardian?this.addressAsBech32(e.guardian):"",this.signature=e.signature||new Uint8Array([]),this.guardianSignature=e.guardianSignature||new Uint8Array([])}addressAsBech32(e){return e}isGuardedTransaction(){let e=this.guardian.length>0,t=this.guardianSignature.length>0;return e&&t}};var T=class extends Error{constructor(t,r){super(t);this.inner=void 0;this.inner=r}summary(){let t=[];t.push({name:this.name,message:this.message});let r=this.inner;for(;r;)t.push({name:r.name,message:r.message}),r=r.inner;return t}};var q=class extends T{constructor(){super("Async timer already running")}},V=class extends T{constructor(){super("Async timer aborted")}};var N=class extends T{constructor(){super("Expected transaction status not reached")}},$=class extends T{constructor(){super("Expected transaction events not found")}};var J=class extends T{constructor(){super("The transaction watcher requires the `isCompleted` property to be defined on the transaction object. Perhaps you've used the sdk-network-provider's `ProxyNetworkProvider.getTransaction()` and in that case you should also pass `withProcessStatus=true`.")}};var K=class extends T{constructor(){super("Cannot sign single transaction.")}},X=class extends T{constructor(){super("Account is not connected.")}},B=class extends Error{constructor(){super("Cannot get signed transaction(s)")}},Y=class extends Error{constructor(){super("Cannot get signed message")}};var O=class{constructor(e){this.timeoutHandle=null;this.rejectionFunc=null;this.name=e,this.correlationTag=0}start(e){if(this.timeoutHandle)throw new q;return this.correlationTag++,new Promise((t,r)=>{this.rejectionFunc=r;let s=()=>{this.rejectionFunc=null,this.stop(),t()};this.timeoutHandle=setTimeout(s,e)})}abort(){this.rejectionFunc&&(this.rejectionFunc(new V),this.rejectionFunc=null),this.stop()}stop(){this.isStopped()||this.timeoutHandle&&(clearTimeout(this.timeoutHandle),this.timeoutHandle=null)}isStopped(){return!this.timeoutHandle}};var me=class{constructor(e){this.fetcher=e}async getTransaction(e){return await this.fetcher.getTransaction(e)}},G=class n{static{this.DefaultPollingInterval=6e3}static{this.DefaultTimeout=n.DefaultPollingInterval*15}static{this.DefaultPatience=0}static{this.NoopOnStatusReceived=()=>{}}constructor(e,t={}){this.fetcher=new me(e),this.pollingIntervalMilliseconds=t.pollingIntervalMilliseconds||n.DefaultPollingInterval,this.timeoutMilliseconds=t.timeoutMilliseconds||n.DefaultTimeout,this.patienceMilliseconds=t.patienceMilliseconds||n.DefaultPatience}async awaitPending(e){let t=i=>i.status.isPending(),r=async()=>{let i=this.transactionOrTxHashToTxHash(e);return await this.fetcher.getTransaction(i)},s=()=>new N;return this.awaitConditionally(t,r,s)}async awaitCompleted(e){let t=i=>{if(i.isCompleted===void 0)throw new J;return i.isCompleted},r=async()=>{let i=this.transactionOrTxHashToTxHash(e);return await this.fetcher.getTransaction(i)},s=()=>new N;return this.awaitConditionally(t,r,s)}async awaitAllEvents(e,t){let r=o=>{let a=this.getAllTransactionEvents(o).map(u=>u.identifier);return t.every(u=>a.includes(u))},s=async()=>{let o=this.transactionOrTxHashToTxHash(e);return await this.fetcher.getTransaction(o)},i=()=>new $;return this.awaitConditionally(r,s,i)}async awaitAnyEvent(e,t){let r=o=>{let a=this.getAllTransactionEvents(o).map(u=>u.identifier);return t.find(u=>a.includes(u))!=null},s=async()=>{let o=this.transactionOrTxHashToTxHash(e);return await this.fetcher.getTransaction(o)},i=()=>new $;return this.awaitConditionally(r,s,i)}async awaitOnCondition(e,t){let r=async()=>{let i=this.transactionOrTxHashToTxHash(e);return await this.fetcher.getTransaction(i)},s=()=>new N;return this.awaitConditionally(t,r,s)}transactionOrTxHashToTxHash(e){let t=typeof e=="string"?e:e.getHash().hex();if(t.length!==he)throw new T(`Invalid transaction hash length. The length of a hex encoded hash should be ${he}.`);return t}async awaitConditionally(e,t,r){let s=new O("watcher:periodic"),i=new O("watcher:patience"),o=new O("watcher:timeout"),a=!1,l,u=!1;for(o.start(this.timeoutMilliseconds).finally(()=>{o.stop(),a=!0});!a&&(await s.start(this.pollingIntervalMilliseconds),l=await t(),u=e(l),!(u||a)););if(u&&await i.start(this.patienceMilliseconds),o.isStopped()||o.stop(),!l||!u)throw r();return l}getAllTransactionEvents(e){let t=[...e.logs.events];for(let r of e.contractResults.items)t.push(...r.logs.events);return t}};var x=class{constructor(e){this.data=e.data,this.signature=e.signature,this.address=e.address,this.version=e.version||ke,this.signer=e.signer||Ue}};var m=class{static transactionToPlainObject(e){return{nonce:Number(e.nonce),value:e.value.toString(),receiver:e.receiver,sender:e.sender,senderUsername:e.senderUsername?P(e.senderUsername):void 0,receiverUsername:e.receiverUsername?P(e.receiverUsername):void 0,gasPrice:Number(e.gasPrice),gasLimit:Number(e.gasLimit),data:e.data&&e.data.length?P(e.data):void 0,chainID:e.chainID,version:e.version,options:e.options==0?void 0:e.options,guardian:e.guardian?e.guardian:void 0,signature:e.signature&&e.signature.length?v(e.signature):void 0,guardianSignature:e.guardianSignature&&e.guardianSignature.length?v(e.guardianSignature):void 0}}static plainObjectToTransaction(e){return new _({nonce:BigInt(e.nonce),value:BigInt(e.value||""),receiver:e.receiver,receiverUsername:F(e.receiverUsername||""),sender:e.sender,senderUsername:F(e.senderUsername||""),guardian:e.guardian,gasPrice:BigInt(e.gasPrice),gasLimit:BigInt(e.gasLimit),data:e.data?E(e.data):void 0,chainID:e.chainID,version:Number(e.version),options:Number(e.options),signature:e.signature?b(e.signature):void 0,guardianSignature:e.guardianSignature?b(e.guardianSignature):void 0})}};var L=class n{constructor(){this.account={address:""};this.initialized=!1;if(n._instance)throw new Error("Error: Instantiation failed: Use ExtensionProvider.getInstance() instead of new.");n._instance=this}static{this._instance=new n}static getInstance(){return n._instance}setAddress(e){return this.account.address=e,n._instance}async init(){return window&&window.elrondWallet&&(this.initialized=!0),this.initialized}async login(e={}){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");let{token:t}=e,r=t||"";return await this.startBgrMsgChannel("connect",r),this.account}async logout(){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");try{await this.startBgrMsgChannel("logout",this.account.address),this.disconnect()}catch(e){console.warn("Extension origin url is already cleared!",e)}return!0}disconnect(){this.account={address:""}}async getAddress(){if(!this.initialized)throw new Error("Extension provider is not initialised, call init() first");return this.account?this.account.address:""}isInitialized(){return this.initialized}isConnected(){return!!this.account.address}getAccount(){return this.account}setAccount(e){this.account=e}async signTransaction(e){this.ensureConnected();let t=await this.signTransactions([e]);if(t.length!=1)throw new K;return t[0]}ensureConnected(){if(!this.account.address)throw new X}async signTransactions(e){this.ensureConnected();let t=await this.startBgrMsgChannel("signTransactions",{from:this.account.address,transactions:e.map(r=>m.transactionToPlainObject(r))});try{return t.map(s=>m.plainObjectToTransaction(s))}catch(r){throw new Error(`Transaction canceled: ${r.message}.`)}}async signMessage(e){this.ensureConnected();let t={account:this.account.address,message:S(e.data)},s=(await this.startBgrMsgChannel("signMessage",t)).signature,i=b(s);return new x({data:e.data,address:e.address??this.account.address,signer:"extension",version:e.version,signature:i})}cancelAction(){return this.startBgrMsgChannel("cancelAction",{})}startBgrMsgChannel(e,t){return new Promise(r=>{window.postMessage({target:"erdw-inpage",type:e,data:t},window.origin);let s=i=>{i.isTrusted&&i.data.target==="erdw-contentScript"&&(i.data.type==="connectResponse"?(i.data.data&&i.data.data.address&&(this.account=i.data.data),window.removeEventListener("message",s),r(i.data.data)):(window.removeEventListener("message",s),r(i.data.data)))};window.addEventListener("message",s,!1)})}};var Z="elvenjs_state",De="https://devnet-api.multiversx.com";var I="/dapp/init",ee="devnet";var _e=["wss://relay.walletconnect.com"],y={devnet:{id:"devnet",shortId:"D",name:"Devnet",egldLabel:"xEGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://devnet-wallet.multiversx.com",xAliasAddress:"https://devnet.xalias.com",apiAddress:"https://devnet-api.multiversx.com",explorerAddress:"https://devnet-explorer.multiversx.com",apiTimeout:1e4},testnet:{id:"testnet",shortId:"T",name:"Testnet",egldLabel:"xEGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://testnet-wallet.multiversx.com",xAliasAddress:"https://testnet.xalias.com",apiAddress:"https://testnet-api.multiversx.com",explorerAddress:"https://testnet-explorer.multiversx.com",apiTimeout:1e4},mainnet:{id:"mainnet",shortId:"1",name:"Mainnet",egldLabel:"EGLD",egldDenomination:"18",decimals:"4",gasPerDataByte:"1500",walletAddress:"https://wallet.multiversx.com",xAliasAddress:"https://xalias.com",apiAddress:"https://api.multiversx.com",explorerAddress:"https://explorer.multiversx.com",apiTimeout:1e4}};var d={get(n){let e=localStorage.getItem(Z);if(!e)return{};let t=JSON.parse(e);return n?t[n]:t},set(n,e){let t=this.get();t[n]=e,localStorage.setItem(Z,JSON.stringify(t))},clear(){localStorage.removeItem(Z)}};var te=async()=>{let n=L.getInstance();try{let e=await n.init(),t=d.get();if(t?.address&&n.setAddress(t.address),!e){console.warn("Something went wrong when trying to initialize the ExtensionProvider..");return}return n}catch{console.warn("Can't initialize the Dapp Provider!")}};var fe=class{constructor(e){this.nonce=0;this.value="";this.receiver="";this.sender="";this.gasPrice=0;this.gasLimit=0;this.data="";this.chainID="";this.version=0;this.signature="";Object.assign(this,e)}},w=class n{constructor(e){this.walletUrl=e}async login(e){let t=this.buildWalletUrl({endpoint:Ne,callbackUrl:e?.callbackUrl,params:{token:e?.token}});return await this.redirect(t,e?.redirectDelayMilliseconds),t}async redirect(e,t){t?await this.redirectLater(e,t):this.redirectImmediately(e)}redirectImmediately(e){window.location.href=e}async redirectLater(e,t){await new Promise(r=>{setTimeout(()=>{window.location.href=e,r(!0)},t)})}async logout(e){let t=this.buildWalletUrl({endpoint:Oe,callbackUrl:e?.callbackUrl});return await this.redirect(t,e?.redirectDelayMilliseconds),!0}async signMessage(e,t){let r=this.buildWalletUrl({endpoint:Fe,callbackUrl:t?.callbackUrl,params:{message:S(e.data)}});return await this.redirect(r),r}getMessageSignatureFromWalletUrl(){let e=window.location.search.slice(1);console.info("getMessageSignatureFromWalletUrl(), url:",e);let t=ge(e);if((t.status?.toString()||"")!=="signed")throw new Y;return t.signature?.toString()||""}async guardTransactions(e,t){this.redirectTransactionsToEndpoint(Me,e,t)}async signTransactions(e,t){this.redirectTransactionsToEndpoint(Ce,e,t)}async signTransaction(e,t){await this.signTransactions([e],t)}getTransactionsFromWalletUrl(e=window.location.search){let t=ge(e.slice(1));return n.isTxSignReturnSuccess(t)?this.getTxSignReturnValue(t):[]}static isTxSignReturnSuccess(e){return Object.prototype.hasOwnProperty.call(e,D)&&e[D]===j}getTxSignReturnValue(e){console.info("getTxSignReturnValue(), urlParams:",e);let t=["nonce","value","receiver","sender","gasPrice","gasLimit","chainID","version","signature"];for(let i of t)if(!e[i]||!Array.isArray(e[i]))throw new B;let r=e.nonce.length;for(let i of t)if(e[i].length!==r)throw new B;let s=[];for(let i=0;i<r;i++){let o=new fe({nonce:parseInt(e.nonce[i]),value:e.value[i],receiver:e.receiver[i],sender:e.sender[i],gasPrice:parseInt(e.gasPrice[i]),gasLimit:parseInt(e.gasLimit[i]),data:e.data&&e.data[i]?e.data[i]:"",chainID:e.chainID[i],version:parseInt(e.version[i]),...e.guardian&&e.guardian[i]?{guardian:e.guardian[i]}:{},...e.guardianSignature&&e.guardianSignature[i]?{guardianSignature:e.guardianSignature[i]}:{},...e.options&&e.options[i]?{options:parseInt(e.options[i])}:{},...e.senderUsername&&e.senderUsername[i]?{senderUsername:e.senderUsername[i]}:{},...e.receiverUsername&&e.receiverUsername[i]?{receiverUsername:e.receiverUsername[i]}:{},signature:e.signature[i]});s.push(o)}return s}static prepareWalletTransaction(e){let t=m.transactionToPlainObject(e);return t.data?t.data=S(E(t.data)):t.data="",t}buildWalletUrl(e){let t=e?.callbackUrl||window.location.href,r=Ie(e.params||{}),s=r?`${r}&callbackUrl=${t}`:`callbackUrl=${t}`,i=`${this.baseWalletUrl()}/${e.endpoint}?${s}`;return console.info(`Redirecting to Wallet URL: ${decodeURI(i)}`),i}baseWalletUrl(){let e=this.walletUrl.split("/"),t=e[0],r=e[2];return t+"//"+r}redirectTransactionsToEndpoint(e,t,r){let s={};t.map(o=>{let a=n.prepareWalletTransaction(o);for(let l in a)Object.prototype.hasOwnProperty.call(a,l)&&!Object.prototype.hasOwnProperty.call(s,l)&&(s[l]=[]),s[l].push(a[l])});let i=this.buildWalletUrl({endpoint:e,callbackUrl:r?.callbackUrl,params:s});window.location.href=i}};var we=class{constructor(){this.origin=typeof window<"u"&&typeof window.location<"u"?window.location.hostname:"";this.apiUrl="https://api.multiversx.com";this.expirySeconds=60*60*24}},C=class{constructor(e){this.config=Object.assign(new we,e)}getToken(e,t,r){let s=this.encodeValue(e),i=this.encodeValue(t);return`${s}.${i}.${r}`}async initialize(e={}){let t=await this.getCurrentBlockHash(),r=this.encodeValue(JSON.stringify(e));return`${this.encodeValue(this.config.origin)}.${t}.${this.config.expirySeconds}.${r}`}async getCurrentBlockHash(){return this.config.gatewayUrl?await this.getCurrentBlockHashWithGateway():await this.getCurrentBlockHashWithApi()}async getCurrentBlockHashWithGateway(){let e=await this.getCurrentRound(),t=`${this.config.gatewayUrl}/blocks/by-round/${e}`;return(await this.get(t)).data.data.blocks.filter(o=>o.shard===this.config.blockHashShard)[0].hash}async getCurrentRound(){if(!this.config.gatewayUrl)throw new Error("Gateway URL not set");if(!this.config.blockHashShard)throw new Error("Blockhash shard not set");let e=`${this.config.gatewayUrl}/network/status/${this.config.blockHashShard}`;return(await this.get(e)).data.data.status.erd_current_round}async getCurrentBlockHashWithApi(){let e=`${this.config.apiUrl}/blocks/latest?ttl=${this.config.expirySeconds}&fields=hash`,t=await this.get(e);return t.hash!==void 0?t.hash:this.getCurrentBlockHashWithApiFallback()}async getCurrentBlockHashWithApiFallback(){let e=`${this.config.apiUrl}/blocks?size=1&fields=hash`;return this.config.blockHashShard!==void 0&&(e+=`&shard=${this.config.blockHashShard}`),(await this.get(e)).hash}encodeValue(e){return this.escape(z(e))}escape(e){return e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async get(e){try{let t=await fetch(e,{method:"GET",headers:this.config.extraRequestHeaders});if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return await t.json()}catch(t){throw console.error("There was a problem with the fetch operation:",t),t}}};var ne=(n,e)=>t=>{let r=t.data;try{r=pe()&&typeof r=="string"?JSON.parse(r):r}catch{console.error("error parsing eventData",r)}let{type:s,payload:i}=r;!pe()&&t.origin!=W()||!(n===s||s==="CANCEL_RESPONSE")||(typeof window<"u"&&window.removeEventListener?.("message",ne(n,e)),e({type:s,payload:i}))};var R=class n{constructor(e){this.initialized=!1;this.account={address:""};this.resetState=e=>{typeof window<"u"&&window.addEventListener("message",ne("RESET_STATE_RESPONSE",t=>{t.type==="RESET_STATE_RESPONSE"&&(e?.(),setTimeout(()=>{this.finalizeResetState()},500))}))};this.init=async()=>(await this.sendPostMessage({type:"FINALIZE_HANDSHAKE_REQUEST",payload:void 0}),this.initialized=!0,this.initialized);this.login=async()=>{if(!this.initialized)throw new Error("Provider not initialized");let e=await this.sendPostMessage({type:"LOGIN_REQUEST",payload:void 0});return e.type=="CANCEL_RESPONSE"?(console.warn("Cancelled the login action"),await this.cancelAction(),null):e.payload.data?(this.account=e.payload.data,this.account):(console.error("Error logging in",e.payload.error??"No data received"),null)};this.logout=async()=>{let e=await this.sendPostMessage({type:"LOGOUT_REQUEST",payload:void 0});return this.initialized=!1,this.disconnect(),!!e.payload.data};this.relogin=async()=>{let e=await this.sendPostMessage({type:"LOGIN_REQUEST",payload:void 0});if(e.type=="CANCEL_RESPONSE")return console.warn("Cancelled the re-login action"),await this.cancelAction(),null;if(!e.payload.data)return console.error("Re-login Error",e.payload.error??"No data received"),null;let{data:t,error:r}=e.payload;if(r||!t)throw new Error("Unable to re-login");let{accessToken:s}=t;return s?(this.account=t,s):(console.error("Unable to re-login. Missing accessToken."),null)};this.signTransactions=async e=>{let t=await this.sendPostMessage({type:"SIGN_TRANSACTIONS_REQUEST",payload:e.map(i=>m.transactionToPlainObject(i))}),{data:r,error:s}=t.payload;if(s||!r)throw new Error("Unable to sign transactions");if(t.type=="CANCEL_RESPONSE")throw this.cancelAction(),new Error("Cancelled the transactions signing action");return r.map(i=>m.plainObjectToTransaction(i))};this.signTransaction=async e=>(await this.signTransactions([e]))[0];this.signMessage=async e=>{let t=await this.sendPostMessage({type:"SIGN_MESSAGE_REQUEST",payload:{message:S(e.data)}}),{data:r,error:s}=t.payload;return s||!r?(console.error("Unable to sign message"),null):t.type=="CANCEL_RESPONSE"?(console.warn("Cancelled the message signing action"),this.cancelAction(),null):r.status!=="signed"?(console.error("Could not sign message"),null):new x({data:e.data,address:e.address??this.account.address,signer:"webview",version:e.version,signature:b(r.signature||"")})};this.cancelAction=async()=>this.sendPostMessage({type:"CANCEL_ACTION_REQUEST",payload:void 0});this.finalizeResetState=async()=>this.sendPostMessage({type:"FINALIZE_RESET_STATE_REQUEST",payload:void 0});this.sendPostMessage=async e=>{let t=window;return t&&(t.ReactNativeWebView?t.ReactNativeWebView.postMessage(JSON.stringify(e)):t.webkit?t.webkit.messageHandlers?.jsHandler?.postMessage(JSON.stringify(e),W()):t.parent&&t.parent.postMessage(e,W())),await this.waitingForResponse(We[e.type])};this.waitingForResponse=async e=>await new Promise(t=>{typeof window<"u"&&window.addEventListener?.("message",ne(e,t))});e?.resetStateCallback&&this.resetState(e.resetStateCallback)}static getInstance(e){return n._instance||(n._instance=new n(e)),n._instance}disconnect(){this.account={address:""}}isInitialized(){return this.initialized}isConnected(){return!!this.account.address}getAccount(){return this.account}setAccount(e){this.account=e}};var f=n=>{if(typeof window<"u"){let e=new URL(window.location.href);return new URLSearchParams(e.search).get(n)}};var ye=async(n,e)=>{let t=f("signature"),r=f("address"),s=d.get("address"),i=d.get("loginToken");if(t&&d.set("signature",t),r||s){r&&(d.set("address",r),window.history.replaceState(null,"",window.location.pathname));let o=new w(`${n}${I}`);if(t&&e&&r){let l=new C({apiUrl:e,origin:window.location.origin}).getToken(r,i,t);d.set("accessToken",l)}return o}};var re=class n{constructor(e){this.status=(e||"").toLowerCase()}static createUnknown(){return new n("unknown")}isPending(){return this.status=="received"||this.status=="pending"}isExecuted(){return this.isSuccessful()||this.isFailed()||this.isInvalid()}isSuccessful(){return this.status=="executed"||this.status=="success"||this.status=="successful"}isFailed(){return this.status=="fail"||this.status=="failed"||this.status=="unsuccessful"||this.isInvalid()}isInvalid(){return this.status=="invalid"}toString(){return this.status}valueOf(){return this.status}equals(e){return e?this.status==e.status:!1}};var ie=class{constructor({apiUrl:e,chainType:t,apiTimeout:r}){this.chainType=t||ee,this.apiUrl=e||y[this.chainType]?.apiAddress,this.apiTimeout=r||y[this.chainType]?.apiTimeout}async apiGet(e,t){if(typeof fetch<"u"){let r=new AbortController,s=setTimeout(()=>r.abort(),this.apiTimeout),i={method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"},signal:r.signal};try{let o=await fetch(this.apiUrl+"/"+e,Object.assign(i,t||{})),a=await o.json();if(!o.ok){let l=a?.error||o.status;return clearTimeout(s),Promise.reject(l)}return clearTimeout(s),a}catch(o){this.handleApiError(o,e)}}}async apiPost(e,t,r){if(typeof fetch<"u"){let s=new AbortController,i=setTimeout(()=>s.abort(),this.apiTimeout),o={method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(t||{}),signal:s.signal};try{let a=await fetch(this.apiUrl+"/"+e,Object.assign(o,r||{})),l=await a.json();if(!a.ok){let u=l?.error||a.status;return clearTimeout(i),Promise.reject(u)}return clearTimeout(i),l}catch(a){this.handleApiError(a,e)}}}handleApiError(e,t){if(!e.response)throw new Error(`Request error on url [${t}]: [${e.toString()}]`);let r=e.response.data,s=r.error||r.message||JSON.stringify(r);throw new Error(s)}async sendTransaction(e){let t=m.transactionToPlainObject(e);return await this.apiPost("transactions",t)}async getAccount(e){let t=await this.apiGet(`accounts/${e}`);return{address:t?.address||"",nonce:Number(t?.nonce||0),balance:t?.balance,code:t?.code||"",userName:t?.username||""}}async getGuardianData(e){let t=await this.apiGet(`address/${e}/guardian-data`);return{guarded:t?.data?.guardianData?.guarded||!1,activeGuardian:t?.data?.guardianData?.activeGuardian,pendingGuardian:t?.data?.guardianData?.pendingGuardian}}async getTransaction(e){let t=await this.apiGet(`transactions/${e}`),r=new re(t.status);return{hash:e,type:t.type||"",nonce:t.nonce||0,round:t.round,epoch:t.epoch||0,value:(t.value||0).toString(),sender:t.sender,receiver:t.receiver,gasPrice:t.gasPrice||0,gasLimit:t.gasLimit||0,data:E(t.data||""),status:r,timestamp:t.timestamp||0,blockNonce:t.blockNonce||0,hyperblockNonce:t.hyperblockNonce||0,hyperblockHash:t.hyperblockHash||"",receipt:t.receipt,logs:t.logs,contractResults:t.results||[],isCompleted:!r.isPending()}}async queryContract({address:e,func:t,args:r,value:s,caller:i}){try{let o={scAddress:e,caller:i,funcName:t,value:s,args:()=>r?.map(l=>z(l))},a=await this.apiPost("query",o);return{returnData:a.returnData,returnCode:a.returnCode,returnMessage:a.returnMessage}}catch(o){this.handleApiError(o,"query")}}};var $e=(g=>(g.onLoginStart="onLoginStart",g.onLoginSuccess="onLoginSuccess",g.onLoginFailure="onLoginFailure",g.onLogoutStart="onLogoutStart",g.onLogoutSuccess="onLogoutSuccess",g.onLogoutFailure="onLogoutFailure",g.onQrPending="onQrPending",g.onQrLoaded="onQrLoaded",g.onTxStart="onTxStart",g.onTxSent="onTxSent",g.onTxFinalized="onTxFinalized",g.onTxFailure="onTxFailure",g.onSignMsgStart="onSignMsgStart",g.onSignMsgFinalized="onSignMsgFinalized",g.onSignMsgFailure="onSignMsgFailure",g.onQueryStart="onQueryStart",g.onQueryFinalized="onQueryFinalized",g.onQueryFailure="onQueryFailure",g))($e||{}),Te=(o=>(o.ledger="ledger",o.mobile="mobile",o.webWallet="web-wallet",o.browserExtension="browser-extension",o.xAlias="x-alias",o.webview="webview",o))(Te||{}),st=(t=>(t.mvx_cancelAction="mvx_cancelAction",t.mvx_signNativeAuthToken="mvx_signNativeAuthToken",t))(st||{}),ot=(e=>(e.hasWebWalletGuardianSign="hasWebWalletGuardianSign",e))(ot||{});var c=class{static set(e,t){if(!e)return;let r={...this.events,[e]:t};this.events=r}static get(e){if(!(!e||!this.events))return this.events[e]}static run(e,...t){!e||!this.events||this.events[e]?.(...t)}static clear(){this.events=void 0}};var p=n=>typeof n=="string"?n.toUpperCase():n instanceof Error?n.message:JSON.stringify(n);var Be=async n=>{if(!n.dappProvider)throw new Error("Logout failed: There is no active session!");c.run("onLogoutStart");try{let e=await n.dappProvider.logout();return e&&(d.clear(),c.run("onLogoutSuccess")),e}catch(e){let t=p(e);console.warn(`Something went wrong trying to logout the user: ${t}`),c.run("onLogoutFailure",t)}};var se=()=>new Date().setHours(new Date().getHours()+24),oe=n=>Date.now()>n;var H=async n=>{let e=d.get("address"),t=d.get("expires");if(!(t&&oe(t))&&e&&n.networkProvider){let s=new A(e);try{let i=await n.networkProvider.getAccount(e),o=await n.networkProvider.getGuardianData(e);d.set("address",e),d.set("activeGuardian",o.guarded&&o.activeGuardian?.address?o.activeGuardian.address:""),d.set("nonce",i.nonce.valueOf()),d.set("balance",i.balance.toString()),s.update(i)}catch(i){let o=p(i);console.warn(`Something went wrong trying to synchronize the user account: ${o}`)}}};var Ge=async(n,e,t,r="/")=>{let s=await te(),o={callbackUrl:encodeURIComponent(`${window.location.origin}${r}`),token:e};try{if(s&&!await s.login(o))throw new Error("There were problems while logging in!")}catch(u){let h=p(u);throw new Error(h)}if(!s)throw new Error("There were problems with auth provider initialization!");let a=s.getAccount();d.set("loginToken",e);let l=a?.signature;if(l&&d.set("signature",l),n.networkProvider&&l)try{let u=await s.getAddress();if(!u)throw new Error("Canceled!");d.set("address",u),d.set("loginMethod","browser-extension"),d.set("expires",se()),await H(n);let h=t.getToken(u,e,l);return d.set("accessToken",h),c.run("onLoginSuccess"),s}catch(u){throw new Error(`Something went wrong trying to synchronize the user account: ${u?.message}`)}};var ve=async(n,e,t,r)=>{let s=new w(`${n}${I}`),o={callbackUrl:typeof window<"u"?encodeURIComponent(`${window.location.origin}${r||"/"}`):"/",token:e};try{return d.set("loginMethod",y[t].xAliasAddress===n?"x-alias":"web-wallet"),await s.login(o),d.set("expires",se()),d.set("loginToken",e),s}catch(a){let l=p(a);console.warn(`Something went wrong trying to login the user: ${l}`),d.set("loginMethod",""),c.run("onLoginFailure",l)}};var ae=async(n,e)=>{c.run("onTxSent",n);let r=await new G(e).awaitCompleted(n.txHash),s=r.sender,i=new A(s),o=await e.getAccount(s);i.update(o),d.set("address",i.bech32()),d.set("balance",i.balance),c.run("onTxFinalized",r)};var ce=n=>{let e=n.sender,t=new A(e),r=n.nonce.valueOf();t.incrementNonce(),d.set("nonce",(r+1n).toString())};var He=async(n,e,t,r)=>{if(f(D)===j&&n&&e){let i=d.get("activeGuardian"),o=d.get("loginMethod"),a=f("hasWebWalletGuardianSign"),l;if("getTransactionsFromWalletUrl"in n){if(l=n.getTransactionsFromWalletUrl()?.[0],!l)return;o==="web-wallet"&&(l.data=P(l.data))}else i&&o!=="web-wallet"&&o!=="x-alias"&&a&&(l=new w(`${t}${I}`).getTransactionsFromWalletUrl()?.[0]);if(l){let u=m.plainObjectToTransaction(l);u.nonce=BigInt(r),ce(u);try{c.run("onTxStart",u);let h=await e.sendTransaction(u);await ae(h,e)}catch(h){let Ae=`Getting transaction information failed! ${p(h)}`;throw c.run("onTxFailure",u,Ae),new Error(Ae)}finally{window.history.replaceState(null,"",window.location.pathname)}}window.history.replaceState(null,"",window.location.pathname)}};var ze=n=>{let e=d.get("activeGuardian");return e&&(n.version=Q,n.options=Le,n.guardian=e),n},Qe=async(n,e)=>{let t=new w(`${e}${I}`),r=window?.location.href,s=new URL(r);s.searchParams.set("hasWebWalletGuardianSign","true"),await t.guardTransactions([n],{callbackUrl:encodeURIComponent(s.toString())})},je=n=>{let e=d.get("activeGuardian");return!(!d.get("address")||!e||n.isGuardedTransaction())};var qe=()=>{let n=!f("walletProviderStatus"),e=f("status")==="signed",t=f("message"),r=f("signature");n&&e&&t&&r&&(c.run("onSignMsgFinalized",t,r),window.history.replaceState(null,"",window.location.pathname))};function at(n){try{let e=atob(n),t=btoa(e),r=F(n),s=P(r),i=n===t||t.startsWith(n),o=n===s||s.startsWith(n);if(i&&o)return!0}catch{return!1}return!1}function M(n){return at(n)?atob(n):n}var de=n=>Object.prototype.toString.call(n)==="[object String]";var Ve=n=>{if(!n||!de(n))return null;let e=n.split(".");if(e.length!==4)return null;try{let[t,r,s,i]=e,o=JSON.parse(M(i)),a=M(t);return{ttl:Number(s),extraInfo:o,origin:a,blockHash:r}}catch(t){return console.error(`Error trying to decode ${n}:`,t),null}};var Je=n=>{if(!n||!de(n))return null;let e=n.split(".");if(e.length!==3)return console.error("Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead"),null;try{let[t,r,s]=e,i=M(t),o=M(r),a=Ve(o);if(!a)return{address:i,body:o,signature:s,blockHash:"",origin:"",ttl:0};let l={...a,address:i,body:o,signature:s};return a.extraInfo?.timestamp||delete l.extraInfo,l}catch{return null}};function Ke(n,e){let t=Je(n);if(t==null)return;let{signature:r,address:s,body:i}=t;r&&n&&s&&(d.set("loginToken",i),d.set("accessToken",n),d.set("signature",r),d.set("address",s),d.set("loginMethod","webview"),e.dappProvider=new R)}var Xe=n=>{n.onLoginStart&&c.set("onLoginStart",n.onLoginStart),n.onLoginSuccess&&c.set("onLoginSuccess",n.onLoginSuccess),n.onLoginFailure&&c.set("onLoginFailure",n.onLoginFailure),n.onLogoutStart&&c.set("onLogoutStart",n.onLogoutStart),n.onLogoutSuccess&&c.set("onLogoutSuccess",n.onLogoutSuccess),n.onLogoutFailure&&c.set("onLogoutFailure",n.onLogoutFailure),n.onQrPending&&c.set("onQrPending",n.onQrPending),n.onQrLoaded&&c.set("onQrLoaded",n.onQrLoaded),n.onTxStart&&c.set("onTxStart",n.onTxStart),n.onTxSent&&c.set("onTxSent",n.onTxSent),n.onTxFinalized&&c.set("onTxFinalized",n.onTxFinalized),n.onTxFailure&&c.set("onTxFailure",n.onTxFailure),n.onSignMsgStart&&c.set("onSignMsgStart",n.onSignMsgStart),n.onSignMsgFinalized&&c.set("onSignMsgFinalized",n.onSignMsgFinalized),n.onSignMsgFailure&&c.set("onSignMsgFailure",n.onSignMsgFailure),n.onQueryStart&&c.set("onQueryStart",n.onQueryStart),n.onQueryFinalized&&c.set("onQueryFinalized",n.onQueryFinalized),n.onQueryFailure&&c.set("onQueryFailure",n.onQueryFailure)};var le=async n=>{c.run("onLoginStart");try{await n(()=>{c.run("onLoginSuccess")})}catch(e){let t=p(e);console.warn(`Something went wrong trying to login the user: ${t}`),c.run("onLoginFailure",t)}};var xe=class{static async init(e){let t=d.get();if(t.expires&&oe(t.expires)){d.clear(),this.dappProvider=void 0;return}this.initOptions={chainType:ee,apiUrl:De,apiTimeout:1e4,walletConnectV2ProjectId:"",walletConnectV2RelayAddresses:_e,...e},this.networkProvider=new ie(this.initOptions),Xe(this.initOptions);let r=f("accessToken");r&&await le(async i=>{Ke(r,this),await H(this),i()}),(t?.address||(t.loginMethod==="web-wallet"||t.loginMethod==="x-alias")&&f("address"))&&t?.loginMethod&&(await le(async i=>{t.loginMethod==="browser-extension"&&(this.dappProvider=await te()),t.loginMethod==="webview"&&(this.dappProvider=new R),t.loginMethod==="web-wallet"&&this.initOptions?.chainType&&(this.dappProvider=await ye(y[this.initOptions.chainType].walletAddress,this.initOptions.apiUrl)),t.loginMethod==="x-alias"&&this.initOptions?.chainType&&(this.dappProvider=await ye(y[this.initOptions.chainType].xAliasAddress,this.initOptions.apiUrl)),await H(this),i()}),this.initOptions?.chainType&&(await He(this.dappProvider,this.networkProvider,y[this.initOptions.chainType][t.loginMethod==="x-alias"?"xAliasAddress":"walletAddress"],t.nonce),qe()))}static async login(e,t){if(!Object.values(Te).includes(e)){let s="Wrong login method!";throw c.run("onLoginFailure",s),new Error(s)}if(!this.networkProvider){let s="Login failed: Use ElvenJs.init() first!";throw c.run("onLoginFailure",s),new Error(s)}await le(async()=>{let s=new C({apiUrl:this.initOptions?.apiUrl,origin:window.location.origin}),i=await s.initialize();if(e==="browser-extension"){let o=await Ge(this,i,s,t?.callbackRoute);this.dappProvider=o}if(e==="web-wallet"&&this.initOptions?.chainType){let o=await ve(y[this.initOptions.chainType].walletAddress,i,this.initOptions?.chainType,t?.callbackRoute);this.dappProvider=o}if(e==="x-alias"&&this.initOptions?.chainType){let o=await ve(y[this.initOptions.chainType].xAliasAddress,i,this.initOptions?.chainType,t?.callbackRoute);this.dappProvider=o}})}static async logout(){try{let e=await Be(this);return this.dappProvider=void 0,e}catch(e){let t=p(e);console.warn("Something went wrong when logging out: ",t)}}static async signAndSendTransaction(e){if(!this.dappProvider){let r="Transaction signing failed: There is no active session!";throw c.run("onTxFailure",e,r),new Error(r)}if(!this.networkProvider){let r="Transaction signing failed: There is no active network provider!";throw c.run("onTxFailure",e,r),new Error(r)}let t=ze(e);try{c.run("onTxStart",e);let r=d.get();if(e.nonce=r.nonce,this.dappProvider instanceof L&&(t=await this.dappProvider.signTransaction(e)),this.dappProvider instanceof R&&(t=await this.dappProvider.signTransaction(e)),this.dappProvider instanceof w&&await this.dappProvider.signTransaction(e),r.loginMethod!=="web-wallet"&&r.loginMethod!=="x-alias"){let s=je(t);if(s||ce(t),s&&this.initOptions?.chainType){await Qe(t,y[this.initOptions.chainType].walletAddress);return}let i=await this.networkProvider.sendTransaction(t);await ae(i,this.networkProvider)}}catch(r){let s=p(r);throw c.run("onTxFailure",t,`Getting transaction information failed! ${s}`),new Error(`Getting transaction information failed! ${s}`)}return t}static async signMessage(e,t){if(!this.dappProvider){let s="Message signing failed: There is no active session!";throw c.run("onSignMsgFailure",e,s),new Error(s)}if(!this.networkProvider){let s="Message signing failed: There is no active network provider!";throw c.run("onSignMsgFailure",e,s),new Error(s)}let r="";try{if(c.run("onSignMsgStart",e),this.dappProvider instanceof L){let i=await this.dappProvider.signMessage(new x({data:U(e)}));i?.signature&&(r=v(i.signature))}if(this.dappProvider instanceof R){let i=await this.dappProvider.signMessage(new x({data:U(e)}));i?.signature&&(r=v(i.signature))}if(this.dappProvider instanceof w){let i=a=>encodeURIComponent(a).replace(/[!'()*]/g,l=>`%${l.charCodeAt(0).toString(16).toUpperCase()}`),o=t?.callbackUrl||window.location.origin;await this.dappProvider.signMessage(new x({data:U(e)}),{callbackUrl:encodeURIComponent(`${o}${o.includes("?")?"&":"?"}message=${i(e)}`)})}let s=d.get();return s.loginMethod!=="web-wallet"&&s.loginMethod!=="x-alias"&&c.run("onSignMsgFinalized",e,r),{message:e,messageSignature:r}}catch(s){let i=p(s);throw c.run("onSignMsgFailure",e,i),new Error(`Message signing failed! ${i}`)}}static async queryContract({address:e,func:t,args:r=[],value:s=0,caller:i}){if(!this.networkProvider)throw new Error("Query failed: There is no active network provider!");if(!e||!t)throw new Error("Query failed: The Query arguments are not valid! Address and func required");let o={address:e,func:t,args:r,value:s,caller:i};try{c.run("onQueryStart",o);let a=await this.networkProvider.queryContract(o);return c.run("onQueryFinalized",a),a}catch(a){let l=p(a);throw c.run("onQueryFinalized",o,l),new Error(`Smart contract query failed! ${l}`)}}static{this.storage=d}static{this.destroy=()=>{this.networkProvider=void 0,this.dappProvider=void 0,this.initOptions=void 0,c.clear()}}};var ct=({amount:n,decimals:e})=>{if(e<0)throw new Error("Decimal places shouldn't be negative number!");let t=n.toString().replace(/,/g,""),[r,s=""]=t.split("."),i=r+s.padEnd(e,"0");return i=i.substring(0,r.length+e),BigInt(i)},Ye=({amount:n,decimals:e,rounding:t=e})=>{if(e<0)throw new Error("Decimal places shouldn't be negative number!");let r=BigInt(n)<0n,s=BigInt(n).toString();r&&(s=s.slice(1)),s=s.padStart(e+1,"0");let i=s.slice(0,-e),o=s.slice(-e);if(t<e){let l=parseInt(o.charAt(t),10);if(o=o.slice(0,t),l>=5){let u=BigInt("1"+"0".repeat(e-t)),h=BigInt(n)+u;return r&&(h=-h),Ye({amount:h,decimals:e,rounding:t})}}let a=`${i}.${o.padEnd(t,"0")}`;return a=a.replace(/\.?0+$/,""),r&&(a=`-${a}`),a};export{A as Account,st as DappCoreWCV2CustomMethodsEnum,xe as ElvenJS,$e as EventStoreEvents,Te as LoginMethodsEnum,_ as Transaction,G as TransactionWatcher,ot as WebWalletUrlParamsEnum,Ye as formatAmount,ct as parseAmount};
